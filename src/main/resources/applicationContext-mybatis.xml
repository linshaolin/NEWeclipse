<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="   
                http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd   
                http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd   
                http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd 
                http://www.springframework.org/schema/context 
               	http://www.springframework.org/schema/context/spring-context.xsd">
	

	<!-- 读取jdbc配置文件 -->
	<context:property-placeholder location="classpath:jdbc.properties" />

	<!-- JNDI获取数据源（dbcp连接池） -->
	<!-- 数据源用完关闭 -->
	<!-- 单例模式 -->
	<bean id="dataSource"
		class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close"
		scope="singleton">
		<!-- 数据库驱动 -->
		<property name="driverClassName" value="${driverClassName}" />
		<!-- 数据库连接 -->
		<property name="url" value="${url}" />
		<!-- 数据库帐号 -->
		<property name="username" value="${uname}" />
		<!-- 数据库密码 -->
		<property name="password" value="${password}" />
		<!-- 初始化连接数量 -->
		<property name="initialSize" value="${initialSize}" />
		<!-- 连接池支持最大的连接数 -->
		<!-- 连接池最多可空闲的连接数 -->
		<property name="maxIdle" value="${maxIdle}" />
		<!-- 连接池最小可空闲的连接数 -->
		<property name="minIdle" value="${minIdle}" />
		<!-- 最大等待时间 -->
		<!-- 是否清理removeAbandonedTimeout秒没有使用的活动连接 -->
		<!-- 活动连接的最大空闲时间 -->
		<property name="removeAbandonedTimeout"
			value="${removeAbandonedTimeout}" />

		<!-- sql心跳 ：保证连接池中连接是真实有效的连接-->

		<!-- 开启Evict的定时校验，循环校验 -->
		<property name="testWhileIdle" value="true" />
		<!-- 定义Evict的时间间隔，单位：毫秒，大于0才会开启evict -->
		<property name="timeBetweenEvictionRunsMillis" value="600000" />
		<!-- 在进行borrowObject处理时，会对拿到的连接进行校验-false不校验 -->
		<property name="testOnBorrow" value="false" />
		<!-- 在进行returnObject处理时，会对返回的连接进行校验-false不校验 -->
		<property name="testOnReturn" value="false" />
		<!-- 校验使用的sql语句，validationQuery，复杂的校验sql会影响性能 -->
		<property name="validationQuery" value="select 1" />
		<!-- 配置每次校验连接的数量，一般等于maxActive -->
		<property name="numTestsPerEvictionRun" value="${maxActive}" />
	</bean>

	<!-- 事务管理器 -->
	<bean id="shiWuGuanLi"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 配置SqlSessionFactory工厂对象 -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation"
			value="classpath:mybatis-config.xml" />
	</bean>

	<!-- AOP事务处理 -->
	<aop:aspectj-autoproxy />
	<aop:config proxy-target-class="true">
		<aop:pointcut expression="execution(* *org.sl.service..*(..))"
			id="transService" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="transService" />
	</aop:config>

	<!-- txAdvice:需要定义事务管理器，进行事务处理 （事务管理策略）-->
	<tx:advice id="txAdvice" transaction-manager="shiWuGuanLi">
		<tx:attributes>
			<tx:method name="hl*" propagation="REQUIRED"
				rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>


	<!-- mapper 接口所在包名，spring会自动查找其下的Mapper -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="cn.kgc.mapper" />
	</bean>

	<!-- redis配置 -->
	<!-- 配置数据源（redis连接池） -->
	<bean id="jedisPoolConfig"
		class="redis.clients.jedis.JedisPoolConfig" scope="singleton">
		<!-- 连接池支持最大的连接数 -->
		<!-- 连接池最多可空闲的连接数 -->
		<property name="maxIdle" value="10" />
		<!-- 最大等待时间 -->
		<!-- 取出时是否检测 -->
		<property name="testOnBorrow" value="true" />
	</bean>

	<!-- 配置redis数据库 -->
	<bean id="jedisPool" class="redis.clients.jedis.JedisPool"
		destroy-method="destroy">
		<!-- 构造函数参数 -->
		<!-- 指定连接池 -->
		<constructor-arg ref="jedisPoolConfig" />
		<!-- 指定ip地址 -->
		<constructor-arg value="127.0.0.1" />
		<!-- 指定端口号 -->
		<constructor-arg value="6379" />
	</bean>

	<!-- 注入Javabean(RedisAPI) -->
	<bean id="redisAPI" class="cn.kgc.util.RedisAPI">
		<property name="jedisPool" ref="jedisPool" />
	</bean>


</beans>
